{"version":3,"file":"static/js/589.4cf19b50.chunk.js","mappings":"sNAsIA,UA/DqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAqBjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,SArBa,SAAAC,GACfA,EAAIC,iBAEJ,IAIMC,EAAW,CACfC,KALWH,EAAII,cAAcC,SAASC,SAASC,MAM/CC,MALYR,EAAII,cAAcC,SAASI,UAAUF,MAMjDG,SALeV,EAAII,cAAcC,SAASM,aAAaJ,OAQzDZ,GAASiB,EAAAA,EAAAA,IAAcV,IACpBW,SACAC,OAAM,kBACLC,EAAAA,GAAAA,MAAY,mDAAmD,GAErE,EAIIC,UAAU,OACVC,GAAI,CACFC,QAAS,OACTC,WAAY,SACZC,cAAe,SACf,uBAAwB,CAAEC,EAAG,EAAGC,MAAO,SAEzCC,YAAU,EACVC,aAAa,MAAKC,SAAA,EAElBC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,UAAQ,EACRC,KAAK,OACL1B,KAAK,WACL2B,QAAQ,2HACRC,MAAM,UAERL,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,UAAQ,EACRC,KAAK,QACL1B,KAAK,YACL2B,QAAQ,qGACRC,MAAM,YAERL,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,UAAQ,EACRC,KAAK,WACL1B,KAAK,eACL2B,QAAQ,qGACRC,MAAM,cAERL,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACH,KAAK,SAASI,QAAQ,YAAYhB,GAAI,CAAEiB,SAAU,KAAMT,SAAC,aAKvE,C","sources":["pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// import { useDispatch } from 'react-redux';\n// import css from './RegisterPage.module.css';\n// import { registerThunk } from 'redux/auth/authThunk';\n// import toast from 'react-hot-toast';\n// const RegisterPage = () => {\n//   const dispatch = useDispatch();\n\n//   const onSubmit = evt => {\n//     evt.preventDefault();\n\n//     const name = evt.currentTarget.elements.userName.value;\n//     const email = evt.currentTarget.elements.userEmail.value;\n//     const password = evt.currentTarget.elements.userPassword.value;\n\n//     const formData = {\n//       name,\n//       email,\n//       password,\n//     };\n\n//     dispatch(registerThunk(formData))\n//       .unwrap()\n//       .catch(() =>\n//         toast.error('Incorrect e-mail address or password. Try again.')\n//       );\n//   };\n//   return (\n//     <form onSubmit={onSubmit} className={css.formWrapper}>\n//       <label className={css.labelText}>\n//         Name\n//         <input\n//           className={css.inputAdd}\n//           type=\"text\"\n//           name=\"userName\"\n//           placeholder=\"Name\"\n//           required\n//         />\n//       </label>\n//       <label className={css.labelText}>\n//         Email\n//         <input\n//           className={css.inputAdd}\n//           type=\"email\"\n//           name=\"userEmail\"\n//           placeholder=\"example@example.com\"\n//           required\n//         />\n//       </label>\n//       <label className={css.labelText}>\n//         Password\n//         <input\n//           className={css.inputAdd}\n//           type=\"password\"\n//           name=\"userPassword\"\n//           placeholder=\"*******\"\n//           required\n//         />\n//       </label>\n//       <button type=\"submit\" className={css.btnSbm}>\n//         Submit\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default RegisterPage;\n\nimport { useDispatch } from 'react-redux';\nimport { registerThunk } from 'redux/auth/authThunk';\nimport toast from 'react-hot-toast';\nimport { Box, Button, TextField } from '@mui/material';\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n\n    const name = evt.currentTarget.elements.userName.value;\n    const email = evt.currentTarget.elements.userEmail.value;\n    const password = evt.currentTarget.elements.userPassword.value;\n\n    const formData = {\n      name,\n      email,\n      password,\n    };\n\n    dispatch(registerThunk(formData))\n      .unwrap()\n      .catch(() =>\n        toast.error('Incorrect e-mail address or password. Try again.')\n      );\n  };\n  return (\n    <Box\n      onSubmit={onSubmit}\n      component=\"form\"\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        '& .MuiTextField-root': { m: 3, width: '40ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        required\n        type=\"text\"\n        name=\"userName\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        label=\"Name\"\n      />\n      <TextField\n        required\n        type=\"email\"\n        name=\"userEmail\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        label=\"E-mail\"\n      />\n      <TextField\n        required\n        type=\"password\"\n        name=\"userPassword\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        label=\"Password\"\n      />\n      <Button type=\"submit\" variant=\"contained\" sx={{ maxWidth: 150 }}>\n        Submit\n      </Button>\n    </Box>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","_jsxs","Box","onSubmit","evt","preventDefault","formData","name","currentTarget","elements","userName","value","email","userEmail","password","userPassword","registerThunk","unwrap","catch","toast","component","sx","display","alignItems","flexDirection","m","width","noValidate","autoComplete","children","_jsx","TextField","required","type","pattern","label","Button","variant","maxWidth"],"sourceRoot":""}